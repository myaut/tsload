Source: tsload
Maintainer: Sergey Klyaus <myautneko@gmail.com>
Build-Depends:
 debhelper (>= 9),
 liblvm2-dev (>= 2.02),
 uuid-dev,
 libcurl4-openssl-dev,
 scons
Section: misc
Priority: optional
Standards-Version: 3.9.5
Vcs-Git: git://github.com/myaut/tsload.git
Vcs-Browser: https://github.com/myaut/tsload
Homepage: http://myaut.github.io/tsload/

Package: tsload
Architecture: amd64 i386
Section: misc
Priority: optional
Depends: 
 libc6
Recommends: 
 libcurl3, 
 liblvm2app2.2,
 libdevmapper1.02.1
Description: modular workload generator
 TSLoad is a complex set of tools that allow to simulate computer 
 workloads in realistic way. Unlike benchmarks that intended to measure 
 maximum performance of system by running it at maximum throughput (and 
 through that forgetting about request latency that is in our opinion is 
 important too), 
 .
 TSLoad is intended to simulate workload that generated by N users. 
 It is also modular, so basically it doesn't support any workload class at all,
 like ab is intended to benchmark web-servers or iozone - filesystems. 
 .
 TSLoad is an engine that provides capabilities to describe workload in 
 flexible way, and takes some responsibilities to create multiple threads, 
 and process experiment config in JSON format, and pass it to a module.
 .
 TSLoad have four operating modes:
 .
  *  Microbenchmarking mode
  *  Simulation mode
  *  Time-series mode
  *  Trace-reproduction mode

Package: tsload-dev
Architecture: amd64 i386 
Section: misc
Priority: optional
Description: Development files for TSLoad -- needed to build modules
 TSLoad is a complex set of tools that allow to simulate computer 
 workloads in realistic way. Unlike benchmarks that intended to measure 
 maximum performance of system by running it at maximum throughput (and 
 through that forgetting about request latency that is in our opinion is 
 important too), 
 .
 TSLoad is intended to simulate workload that generated by N users. 
 It is also modular, so basically it doesn't support any workload class at all,
 like ab is intended to benchmark web-servers or iozone - filesystems. 
 .
 TSLoad is an engine that provides capabilities to describe workload in 
 flexible way, and takes some responsibilities to create multiple threads, 
 and process experiment config in JSON format, and pass it to a module.
 .
 TSLoad have four operating modes:
 .
  *  Microbenchmarking mode
  *  Simulation mode
  *  Time-series mode
  *  Trace-reproduction mode
  
Package: tsload-doc
Architecture: all
Section: misc
Priority: optional
Description: Documentation for TSLoad workload generator
 TSLoad is a complex set of tools that allow to simulate computer 
 workloads in realistic way. Unlike benchmarks that intended to measure 
 maximum performance of system by running it at maximum throughput (and 
 through that forgetting about request latency that is in our opinion is 
 important too), 
 .
 TSLoad is intended to simulate workload that generated by N users. 
 It is also modular, so basically it doesn't support any workload class at all,
 like ab is intended to benchmark web-servers or iozone - filesystems. 
 .
 TSLoad is an engine that provides capabilities to describe workload in 
 flexible way, and takes some responsibilities to create multiple threads, 
 and process experiment config in JSON format, and pass it to a module.
 .
 TSLoad have four operating modes:
 .
  *  Microbenchmarking mode
  *  Simulation mode
  *  Time-series mode
  *  Trace-reproduction mode
