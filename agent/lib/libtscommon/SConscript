from pathutil import *

target = 'libtscommon'

Import('env')

lib = env.Clone()

# dl for modules
# pthread for thread-handling
if lib.SupportedPlatform('posix'):
    lib.Append(LIBS = ['dl', 'pthread'])

# We need librt for ns-precision time source
if lib.SupportedPlatform('linux'):
    lib.Append(LIBS = ['rt'])

# Add winsock2 library
if lib.SupportedPlatform('win'):
    lib.Append(LIBS = ['Ws2_32'])

# Sockets and name services requires libraries
if lib.SupportedPlatform('solaris'):
    lib.Append(LIBS = ['socket', 'nsl'])

# Process PLATAPIs
lib.PreparePlatform()

lib.AddDeps(('lib', 'libjson'))

objects = lib.CompileSharedLibrary()
library = lib.LinkSharedLibrary(target, objects)

lib.InstallTarget(lib['INSTALL_LIB'], library)

if 'doc' in BUILD_TARGETS:
    config = lib.DoxyConfigBuilder(File('config.doxy'), 
                                   [Dir('src'), Dir('include')])
    lib.AlwaysBuild(config)
    
    docdir = Dir(PathJoin('doc'))
    tsdoc = lib.Command(docdir, config, 
                        [Mkdir(docdir),
                        'doxygen $SOURCE > $TARGET/doxygen.log'])
    lib.Alias('doc', tsdoc)